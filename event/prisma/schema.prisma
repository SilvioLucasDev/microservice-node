generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id
  name         String   @unique
  document     String   @db.VarChar(80)
  email        String   @db.VarChar(80)
  password     String   @db.VarChar(255)
  mobile_phone String   @db.VarChar(80)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  tickets   Ticket[]
  addresses Address[]
  cards     Card[]

  @@map("users")
}

model Address {
  id           String   @id
  user_id      String
  zipcode      String   @db.VarChar(80)
  address      String   @db.VarChar(80)
  number       String   @db.VarChar(80)
  complement  String?  @db.VarChar(80)
  neighborhood String   @db.VarChar(80)
  city         String   @db.VarChar(80)
  state        String   @db.VarChar(80)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@map("addresses")
}

model Card {
  id         String   @id
  user_id    String
  alias      String   @db.VarChar(80)
  number     String   @db.VarChar(80)
  brand      String   @db.VarChar(80)
  token      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user         User          @relation(fields: [user_id], references: [id])
  transactions Transaction[]

  @@map("cards")
}

model Event {
  id          String   @id
  name        String   @db.VarChar(80)
  description String   @db.VarChar(80)
  capacity    Int
  price       Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  tickets Ticket[]

  @@map("events")
}

model Ticket {
  id         String   @id
  event_id   String
  user_id    String
  status     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  event        Event        @relation(fields: [event_id], references: [id])
  user         User         @relation(fields: [user_id], references: [id])
  transactions Transaction?

  @@map("tickets")
}

model Transaction {
  id                 String   @id
  ticket_id          String   @unique
  payment_type       String
  card_id            String?
  total              Float
  installments       Int?
  due_date           DateTime
  processor_response String
  transaction_id     String   @unique
  status             String
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  ticket Ticket? @relation(fields: [ticket_id], references: [id])
  card   Card?   @relation(fields: [card_id], references: [id])

  @@map("transactions")
}
